name: Node.js Package

on:
  push:
    branches: [ main ]
  pull_request: {}

jobs:
  Test:
    runs-on: ubuntu-latest
    services:
      snapshot:
        image: fwouts/chrome-screenshot:1.2.0
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Test
        id: test
        run: yarn test --coverage --json --outputFile=result.json --testLocationInResults
      - name: Report
        uses: tanmen/jest-reporter@v1
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  LisenceScan:
    if: ${{ github.event_name != 'pull_request' }}
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
      - name: Check license
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}

  PublishStorybook:
    if: ${{ github.event_name != 'pull_request' }}
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
      - name: Build
        run: yarn build-storybook
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: storybook-static

  Publish:
    if: ${{ github.event_name != 'pull_request' }}
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
          registry-url: https://registry.npmjs.org/
      - run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
      - run: yarn build
      - run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
