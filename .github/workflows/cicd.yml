name: CI/CD
on:
  push:
    branches: [ main ]
  pull_request: {}
jobs:
  Install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: yarn
      - name: Install modules
        run: yarn install --frozen-lockfile
  Build:
    runs-on: ubuntu-latest
    needs: [Install]
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: yarn
      - name: Install modules
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
  StorybookBuild:
    runs-on: ubuntu-latest
    needs: [ Install ]
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: yarn
      - name: Install modules
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build-storybook
  Test:
    services:
      snapshot:
        image: fwouts/chrome-screenshot:1.2.2
    runs-on: ubuntu-latest
    needs: [ Install ]
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: yarn
      - name: Install modules
        run: yarn install --frozen-lockfile
      - name: Test
        id: test
        run: yarn test --coverage --json --outputFile=result.json --testLocationInResults
      - name: Report
        uses: tanmen/jest-reporter@v1
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  LisenceScan:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [ Test, Build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
      - name: Check license
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
  Publish:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Test, Build ]
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: yarn
          registry-url: https://registry.npmjs.org/
      - name: Install modules
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Publish
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  StorybookPublish:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [ Test, Build, StorybookBuild ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build-storybook
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.4.3
        with:
          branch: gh-pages
          folder: storybook-static
