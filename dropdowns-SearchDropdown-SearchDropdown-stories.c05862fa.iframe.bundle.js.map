{"version":3,"file":"dropdowns-SearchDropdown-SearchDropdown-stories.c05862fa.iframe.bundle.js","mappings":";;AA2BA;;AAEA;;AAEA;;;;;AAOA;;AAEA;;;AAGA","sources":["webpack://react-actors/./src/dropdowns/Dropdown/Dropdown.tsx"],"sourcesContent":["import {css} from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport {FC, ReactNode} from \"react\";\nimport {useTheme} from \"../../hooks\";\nimport {ThemeProp} from \"../../providers\";\n\nexport type DropdownProps = {\n  open?: boolean;\n  align?: 'right' | 'left';\n  items: ReactNode[];\n  children: ReactNode;\n}\n\nexport const Dropdown: FC<DropdownProps> = ({open, align = 'right', items, children}) => {\n  const theme = useTheme('normal');\n  return <Wrap tabIndex={0}>\n    {children}\n    {open && <Down align={align} theme={theme}>\n      {items.map((item, index) => <Item key={index} tabIndex={index} theme={theme}>{item}</Item>)}\n    </Down>}\n  </Wrap>;\n};\n\nconst Wrap = styled.div`\n  position: relative;\n`;\n\nconst Down = styled.ul<{ theme: ThemeProp; align: 'right' | 'left' }>(({theme: {font}, align}) => css`\n  position: absolute;\n  color: ${font};\n  top: calc(100% + .25rem);\n  ${align === 'left' ? css`right: 0;` : css`left: 0;`}\n  border-radius: .25rem;\n  list-style-type: none;\n  max-height: 13.75rem;\n  overflow-y: scroll;\n`);\n\nconst Item = styled.li<{ theme: ThemeProp; }>(({theme: {background, border}}) => css`\n  padding: .375rem .5rem;\n  background-color: ${background};\n\n  & + & {\n    border-top: 1px solid ${border};\n  }\n\n  &:hover, &:focus {\n    background-color: rgba(0, 0, 0, .8);\n  }\n`);\n"],"names":[],"sourceRoot":""}